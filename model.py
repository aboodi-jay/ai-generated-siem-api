# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zSwGjAnai5vhQ8ADSJh9U843i0vKyHqh
"""

import json
import joblib
import pandas as pd

# ── Constants ──────────────────────────────────────────────────────────────
ALERT_FILE = "/var/ossec/logs/alerts/alerts.json"
AI_ENDPOINT = "https://ai-generated-siem-api.onrender.com/predict"   # still here if you want it later
HEADERS = {"Content-Type": "application/json"}

# ── Load Wazuh alert as json_input ─────────────────────────────────────────
with open(ALERT_FILE, "r") as f:
    try:
        # If the file is a single JSON object
        json_input = json.load(f)
    except json.JSONDecodeError:
        # If the file is JSON‑Lines, grab the last line (latest alert)
        f.seek(0)
        lines = f.readlines()
        if not lines:
            raise ValueError("Alert file is empty.")
        json_input = json.loads(lines[-1])

# ── Your existing feature‑extraction + prediction code (unchanged) ─────────
def extract_features(wazuh_event):
    return {
        "url": wazuh_event.get("full_log", ""),                     # Using full_log as “url”
        "firedtimes": wazuh_event.get("rule", {}).get("firedtimes", 0),
        "level": wazuh_event.get("rule", {}).get("level", 0),
    }

features = extract_features(json_input)          # Step 1
df = pd.DataFrame([features])                    # Step 2

model = joblib.load("model.pkl")                 # Step 3
prediction = model.predict(df)

label = "real threat" if prediction[0] == 1 else "false positive"   # Step 4
print("Prediction:", label)